import { static as exStatic } from "express";
import https from "https";
import fs from "fs";
import { join, dirname } from "path";
import { fileURLToPath } from "url";
import checkMode from "./checkMode.js";

const pathHere = dirname(fileURLToPath(import.meta.url));

export default function startServer(app) {
  const mode = checkMode();
  // const mode = "PRODUCTION";

  if (mode === "PRODUCTION") {
    // const privkey = "/etc/letsencrypt/live/kgt.ktminks.com/privkey.pem";
    // const certificate = "/etc/letsencrypt/live/kgt.ktminks.com/cert.pem";
    // const chain = "/etc/letsencrypt/live/kgt.ktminks.com/chain.pem";

    // const key = fs.readFileSync(privkey, "utf8");
    // const cert = fs.readFileSync(certificate, "utf8");
    // const ca = fs.readFileSync(chain, "utf8");

    // const credentials = { key, cert, ca };
    const key = `
-----BEGIN PRIVATE KEY-----
MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQClkkZYdb19ewBr
9LVrm1nP7Ze7h3k3pjLIxnn6HKMmAMGfYBe20xxwmb01CoDiKYiHNl25X+uXzIsP
ewAAYhrchebgRWVG85aB79mLTAOILzkM0o/Aj+vtPez1mgc586NUdEsBedfY4v+R
pXWhOCt19N8xAT0/lnjyKknThCbggdoFPjhxCPdFzVh6elEpnaGkgAAER+mpoHsq
C4w0haulDIowcZXUyK0SPabro2xVN1t5E9GkVFPRt8N2JN4uwO566NJWe/U7iKV7
yGtkSgZdZsL/U82nKA46Eq5C5oxAmTdQ1zzCGgtjTogOTzCgNsTTSqTM70mBPJ1O
zX0444VbAgMBAAECggEATT3WT4JuKlHtum9pC5Bn79bZyITFCi8g1gWx9frSKfKE
YcPEjGgkhmtSl6IUym2x4dJ9GvQixqiH32r0bzlVareVI998BgOxnWC1zoRhyXCu
XssEgUMjP4R6PYHkCScedVHjhAbBqc8Mh3f3ToUT0W2xif0YA8hBGEieNG0cbfOm
DGWHb021CdTAPliBWp9wA0YzeESqvrgOnJb+3P2+cMhZxuRT2AmfxEaj1Z71haTJ
aPo4eZ/VYmfwNpQ0bgQsLIaQYv8gSv7yQcSeconae9GDkxkagyE1qCQa/0TsUxWa
kbnts3fdxA7O2V6F7R+molefvcvYoTYyd/UPOtNCAQKBgQDSdFGsQu3tyQsgd2hm
HXiPHXAzRer6FyxE9SZiBf7kLOynxnX79zkIhvke7nHVV+MusClmsI4eF9Edoqko
ExnAOkndOiuB+eXImsU5Onu01GCKGLW5bCbSm2CxJDnJFBqrgHmj1JWXKa3aG4gj
fMeQuyKAZZ48mKyXGwb7G+6M2wKBgQDJZ1RxWHsXOR9Pg7mmsk+vr2scYoaCH6sc
kAxfUVY8jf0QdK7L6r6vQzA7276q3ME3vSVrX0hact54bDShviMNFshYuJPgaE9F
khA0u4eBu9UcT1N+lYEADxTVFbMUQlUAaC7YvHAQQCdlQFn43JWjX4+IasUQngSh
jlONUTwRgQKBgGQd09C4Ekohbvql83NIp9alcX/izhLlPTkcyoKtSYGw4XA7GFui
U258Dz0ov9x3L+tBAKEKcsFcIS4Q+JnI5GIvGH52ssXlZOvWvOYprTnsInTvplus
WJeuNQRwMFE5ECrwNm26ruM3f64XlN8U+Dcg3xvnu6wmEUzdHagNtKErAoGAbDIV
fBqjbbNjLa0/I90wz9m1+fa3+dmXa+26p84jPL6uj5OPf76pF7BJji6bvGCBcDct
jgQO84A4IYtHrwhc/iAaGwd1cZ230FEKYbnIrxo//0hiO2OHfIedkmdo395Ombxe
RlLdBO3h/BPZAcdGoBCrJAbvvOCW7k9udUGJuoECgYEAr0ITkGatCr7673Q4JbgE
8ebsOxBlJpC824ZFBPCLhvTmmlrRT1NH3FjYnZWMiHHe0ZIEt+gNfHDwA8MX/CVI
hp7jeEl38OFpBZN0iZQMaJa9z9i4LembX70q4iHjyhmIhoiDk2feaSvR4IrJ9+VT
V25rpasWd904tMLx7fb4nLM=
-----END PRIVATE KEY-----`;
    const cert = `-----BEGIN CERTIFICATE-----
MIIFJDCCBAygAwIBAgISA+ToHNWe9b35I9YhFoGJo7k4MA0GCSqGSIb3DQEBCwUA
MDIxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBFbmNyeXB0MQswCQYDVQQD
EwJSMzAeFw0yMTA5MjExNTEwMTJaFw0yMTEyMjAxNTEwMTFaMBoxGDAWBgNVBAMT
D2tndC5rdG1pbmtzLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEB
AKWSRlh1vX17AGv0tWubWc/tl7uHeTemMsjGefocoyYAwZ9gF7bTHHCZvTUKgOIp
iIc2Xblf65fMiw97AABiGtyF5uBFZUbzloHv2YtMA4gvOQzSj8CP6+097PWaBznz
o1R0SwF519ji/5GldaE4K3X03zEBPT+WePIqSdOEJuCB2gU+OHEI90XNWHp6USmd
oaSAAARH6amgeyoLjDSFq6UMijBxldTIrRI9puujbFU3W3kT0aRUU9G3w3Yk3i7A
7nro0lZ79TuIpXvIa2RKBl1mwv9TzacoDjoSrkLmjECZN1DXPMIaC2NOiA5PMKA2
xNNKpMzvSYE8nU7NfTjjhVsCAwEAAaOCAkowggJGMA4GA1UdDwEB/wQEAwIFoDAd
BgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDAYDVR0TAQH/BAIwADAdBgNV
HQ4EFgQUdFt8d335e03iBYPvwc3DOAfaJnEwHwYDVR0jBBgwFoAUFC6zF7dYVsuu
UAlA5h+vnYsUwsYwVQYIKwYBBQUHAQEESTBHMCEGCCsGAQUFBzABhhVodHRwOi8v
cjMuby5sZW5jci5vcmcwIgYIKwYBBQUHMAKGFmh0dHA6Ly9yMy5pLmxlbmNyLm9y
Zy8wGgYDVR0RBBMwEYIPa2d0Lmt0bWlua3MuY29tMEwGA1UdIARFMEMwCAYGZ4EM
AQIBMDcGCysGAQQBgt8TAQEBMCgwJgYIKwYBBQUHAgEWGmh0dHA6Ly9jcHMubGV0
c2VuY3J5cHQub3JnMIIBBAYKKwYBBAHWeQIEAgSB9QSB8gDwAHYAb1N2rDHwMRnY
mQCkURX/dxUcEdkCwQApBo2yCJo32RMAAAF8CR8zOgAABAMARzBFAiEAppCAC9Rn
68dHrraHZ6Evc+d9nhjJyMM59QdJjuk6jC4CIGYALFpEG9cJegiJi4I6DOIbXZvL
ISqI1lKQaAWnjz7kAHYAfT7y+I//iFVoJMLAyp5SiXkrxQ54CX8uapdomX4i8NcA
AAF8CR8zTgAABAMARzBFAiB/oOJ08TrEEc3vyekT6F7UVT9HkjGEBXgABLqBAvah
hgIhAIE/JB5kD7TwVtRPonkXnygiB50lND1GWY3NIgEbCypWMA0GCSqGSIb3DQEB
CwUAA4IBAQCpTM6+mK4/p8wwkfyWUqIu/J/yzlMWf9Scl7c+FHNzKb4LwmrJrMuG
ghfgFI6pbbdIbTK8uVMT6Q9V1Xn62SaKM3WXyBmmceUjNTuRvYHclsVTYrEKwOly
Iz/0tWbSwQ1kiuJr8ifvr7+229j0qliOnJITTm9GcfpIguR31Z6gq6pX2O1z3kbw
BXBorJGVoaSvOvV+g4SknpijQAkPOZh36F+8wT0NEU73S8FIyEu5UHCW9oJDfJE7
jUZG0lGCu1W3BCuCBtTGa5shjvQ97onslCJT1s+SItiML1pejReRmqA+iT+NzcUr
NhPDD657jfQ+P6iw+oNRyPgjTdq9/C1u
-----END CERTIFICATE-----`;
    const ca = `-----BEGIN CERTIFICATE-----
MIIFFjCCAv6gAwIBAgIRAJErCErPDBinU/bWLiWnX1owDQYJKoZIhvcNAQELBQAw
TzELMAkGA1UEBhMCVVMxKTAnBgNVBAoTIEludGVybmV0IFNlY3VyaXR5IFJlc2Vh
cmNoIEdyb3VwMRUwEwYDVQQDEwxJU1JHIFJvb3QgWDEwHhcNMjAwOTA0MDAwMDAw
WhcNMjUwOTE1MTYwMDAwWjAyMQswCQYDVQQGEwJVUzEWMBQGA1UEChMNTGV0J3Mg
RW5jcnlwdDELMAkGA1UEAxMCUjMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
AoIBAQC7AhUozPaglNMPEuyNVZLD+ILxmaZ6QoinXSaqtSu5xUyxr45r+XXIo9cP
R5QUVTVXjJ6oojkZ9YI8QqlObvU7wy7bjcCwXPNZOOftz2nwWgsbvsCUJCWH+jdx
sxPnHKzhm+/b5DtFUkWWqcFTzjTIUu61ru2P3mBw4qVUq7ZtDpelQDRrK9O8Zutm
NHz6a4uPVymZ+DAXXbpyb/uBxa3Shlg9F8fnCbvxK/eG3MHacV3URuPMrSXBiLxg
Z3Vms/EY96Jc5lP/Ooi2R6X/ExjqmAl3P51T+c8B5fWmcBcUr2Ok/5mzk53cU6cG
/kiFHaFpriV1uxPMUgP17VGhi9sVAgMBAAGjggEIMIIBBDAOBgNVHQ8BAf8EBAMC
AYYwHQYDVR0lBBYwFAYIKwYBBQUHAwIGCCsGAQUFBwMBMBIGA1UdEwEB/wQIMAYB
Af8CAQAwHQYDVR0OBBYEFBQusxe3WFbLrlAJQOYfr52LFMLGMB8GA1UdIwQYMBaA
FHm0WeZ7tuXkAXOACIjIGlj26ZtuMDIGCCsGAQUFBwEBBCYwJDAiBggrBgEFBQcw
AoYWaHR0cDovL3gxLmkubGVuY3Iub3JnLzAnBgNVHR8EIDAeMBygGqAYhhZodHRw
Oi8veDEuYy5sZW5jci5vcmcvMCIGA1UdIAQbMBkwCAYGZ4EMAQIBMA0GCysGAQQB
gt8TAQEBMA0GCSqGSIb3DQEBCwUAA4ICAQCFyk5HPqP3hUSFvNVneLKYY611TR6W
PTNlclQtgaDqw+34IL9fzLdwALduO/ZelN7kIJ+m74uyA+eitRY8kc607TkC53wl
ikfmZW4/RvTZ8M6UK+5UzhK8jCdLuMGYL6KvzXGRSgi3yLgjewQtCPkIVz6D2QQz
CkcheAmCJ8MqyJu5zlzyZMjAvnnAT45tRAxekrsu94sQ4egdRCnbWSDtY7kh+BIm
lJNXoB1lBMEKIq4QDUOXoRgffuDghje1WrG9ML+Hbisq/yFOGwXD9RiX8F6sw6W4
avAuvDszue5L3sz85K+EC4Y/wFVDNvZo4TYXao6Z0f+lQKc0t8DQYzk1OXVu8rp2
yJMC6alLbBfODALZvYH7n7do1AZls4I9d1P4jnkDrQoxB3UqQ9hVl3LEKQ73xF1O
yK5GhDDX8oVfGKF5u+decIsH4YaTw7mP3GFxJSqv3+0lUFJoi5Lc5da149p90Ids
hCExroL1+7mryIkXPeFM5TgO9r0rvZaBFOvV2z0gp35Z0+L4WPlbuEjN/lxPFin+
HlUjr8gRsI3qfJOQFy/9rKIJR0Y/8Omwt/8oTWgy1mdeHmmjk7j1nYsvC9JSQ6Zv
MldlTTKB3zhThV1+XWYp6rjd5JW1zbVWEkLNxE7GJThEUG3szgBVGP7pSWTUTsqX
nLRbwHOoq7hHwg==
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIFYDCCBEigAwIBAgIQQAF3ITfU6UK47naqPGQKtzANBgkqhkiG9w0BAQsFADA/
MSQwIgYDVQQKExtEaWdpdGFsIFNpZ25hdHVyZSBUcnVzdCBDby4xFzAVBgNVBAMT
DkRTVCBSb290IENBIFgzMB4XDTIxMDEyMDE5MTQwM1oXDTI0MDkzMDE4MTQwM1ow
TzELMAkGA1UEBhMCVVMxKTAnBgNVBAoTIEludGVybmV0IFNlY3VyaXR5IFJlc2Vh
cmNoIEdyb3VwMRUwEwYDVQQDEwxJU1JHIFJvb3QgWDEwggIiMA0GCSqGSIb3DQEB
AQUAA4ICDwAwggIKAoICAQCt6CRz9BQ385ueK1coHIe+3LffOJCMbjzmV6B493XC
ov71am72AE8o295ohmxEk7axY/0UEmu/H9LqMZshftEzPLpI9d1537O4/xLxIZpL
wYqGcWlKZmZsj348cL+tKSIG8+TA5oCu4kuPt5l+lAOf00eXfJlII1PoOK5PCm+D
LtFJV4yAdLbaL9A4jXsDcCEbdfIwPPqPrt3aY6vrFk/CjhFLfs8L6P+1dy70sntK
4EwSJQxwjQMpoOFTJOwT2e4ZvxCzSow/iaNhUd6shweU9GNx7C7ib1uYgeGJXDR5
bHbvO5BieebbpJovJsXQEOEO3tkQjhb7t/eo98flAgeYjzYIlefiN5YNNnWe+w5y
sR2bvAP5SQXYgd0FtCrWQemsAXaVCg/Y39W9Eh81LygXbNKYwagJZHduRze6zqxZ
Xmidf3LWicUGQSk+WT7dJvUkyRGnWqNMQB9GoZm1pzpRboY7nn1ypxIFeFntPlF4
FQsDj43QLwWyPntKHEtzBRL8xurgUBN8Q5N0s8p0544fAQjQMNRbcTa0B7rBMDBc
SLeCO5imfWCKoqMpgsy6vYMEG6KDA0Gh1gXxG8K28Kh8hjtGqEgqiNx2mna/H2ql
PRmP6zjzZN7IKw0KKP/32+IVQtQi0Cdd4Xn+GOdwiK1O5tmLOsbdJ1Fu/7xk9TND
TwIDAQABo4IBRjCCAUIwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYw
SwYIKwYBBQUHAQEEPzA9MDsGCCsGAQUFBzAChi9odHRwOi8vYXBwcy5pZGVudHJ1
c3QuY29tL3Jvb3RzL2RzdHJvb3RjYXgzLnA3YzAfBgNVHSMEGDAWgBTEp7Gkeyxx
+tvhS5B1/8QVYIWJEDBUBgNVHSAETTBLMAgGBmeBDAECATA/BgsrBgEEAYLfEwEB
ATAwMC4GCCsGAQUFBwIBFiJodHRwOi8vY3BzLnJvb3QteDEubGV0c2VuY3J5cHQu
b3JnMDwGA1UdHwQ1MDMwMaAvoC2GK2h0dHA6Ly9jcmwuaWRlbnRydXN0LmNvbS9E
U1RST09UQ0FYM0NSTC5jcmwwHQYDVR0OBBYEFHm0WeZ7tuXkAXOACIjIGlj26Ztu
MA0GCSqGSIb3DQEBCwUAA4IBAQAKcwBslm7/DlLQrt2M51oGrS+o44+/yQoDFVDC
5WxCu2+b9LRPwkSICHXM6webFGJueN7sJ7o5XPWioW5WlHAQU7G75K/QosMrAdSW
9MUgNTP52GE24HGNtLi1qoJFlcDyqSMo59ahy2cI2qBDLKobkx/J3vWraV0T9VuG
WCLKTVXkcGdtwlfFRjlBz4pYg1htmf5X6DYO8A4jqv2Il9DjXA6USbW1FzXSLr9O
he8Y4IWS6wY7bCkjCWDcRQJMEhg76fsO3txE+FiYruq9RUWhiF1myv4Q6W+CyBFC
Dfvp7OOGAN6dEOM4+qR9sdjoSYKEBpsr6GtPAQw4dy753ec5
-----END CERTIFICATE-----`;
    const credentials = { key, cert, ca };
    const msg = "HTTPS listening on https://kgt.ktminks.com:8443";

    // app.use(/^(?!\/api).*$/, exStatic(join(pathHere, "../public/prod")));

    const httpsServer = https.createServer(credentials, app);
    httpsServer.listen("8443", () => console.log(msg));
  }
  // otherwise, start http server
  app.use(/^(?!\/api).*$/, exStatic(join(pathHere, "../public/dev")));

  const port = process.env.PORT ? process.env.PORT : 4000;
  const msg = `HTTP server listening on port ${port}`;
  app.listen(port, () => console.log(msg));
}
